defaults:
  run:
    working-directory: "terraform"

name: "Terraform CI/CD"

on:
  push:
    branches:
      - main
  pull_request:

jobs:
  terraform:
    name: "Terraform Infrastructure"
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Authenticate with Google Cloud
        uses: google-github-actions/auth@v1
        with:
          credentials_json: ${{ secrets.GCP_SA }}

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2

      - name: Terraform Init
        run: terraform init
        working-directory: terraform

      - name: Terraform Validate
        run: terraform validate -no-color
        working-directory: terraform

      - name: Terraform Plan
        id: plan
        run: terraform plan -no-color -input=false
        working-directory: terraform

      - name: Check if Deployment Files Changed
        id: check_deploy
        run: |
          CHANGED_FILES=$(git diff --name-only HEAD~1)
          echo "$CHANGED_FILES" > changed_files.txt

          if grep -q "src/" changed_files.txt || grep -q "Dockerfile" changed_files.txt; then
            echo "deploy_needed=true" >> $GITHUB_ENV
            echo "::set-output name=deploy_needed::true"
          else
            echo "deploy_needed=false" >> $GITHUB_ENV
            echo "::set-output name=deploy_needed::false"
          fi

      - name: Terraform Apply (Infrastructure)
        if: github.ref == 'refs/heads/main' && github.event_name == 'push'
        run: terraform apply -auto-approve -input=false
        working-directory: terraform

  deploy:
    name: "Build & Deploy"
    runs-on: ubuntu-latest
    needs: terraform
    if: needs.terraform.outputs.deploy_needed == 'true'

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          distribution: "temurin"
          java-version: "17"

      - name: Build JAR with Maven
        run: mvn clean install -DskipTests
        working-directory: src

      - name: Configure Docker to use GCP Artifact Registry
        run: gcloud auth configure-docker northamerica-northeast1-docker.pkg.dev

      - name: Build and Push Docker Image
        run: |
          IMAGE_TAG=$(date +%s)
          echo "IMAGE_TAG=$IMAGE_TAG" >> $GITHUB_ENV

          docker build -t northamerica-northeast1-docker.pkg.dev/off-net-dev/lendly-demo/spring-boot-rest-app:latest .
          docker push northamerica-northeast1-docker.pkg.dev/off-net-dev/lendly-demo/spring-boot-rest-app:latest

      - name: Terraform Apply (Deployment)
        run: terraform apply -auto-approve -var="image_tag=latest"
        working-directory: terraform
