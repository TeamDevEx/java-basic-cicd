defaults:
  run:
    working-directory: "terraform"

name: Spring Boot CI/CD Pipeline with Environments

on:
  push:
    branches: ["main"]
  pull_request:
    branches: ["main"]

jobs:
  Build:
    runs-on: ubuntu-latest
    steps:
      - name: Set up Cloud SDK
        uses: google-github-actions/setup-gcloud@v1

      - name: Checkout
        uses: actions/checkout@v3

      - uses: google-github-actions/auth@v1
        id: auth
        with:
          credentials_json: ${{ secrets.GCP_SA }}

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2

      - name: Terraform Format
        id: fmt
        run: terraform fmt -check

      - name: Terraform Init
        id: init
        run: terraform init

      - name: Terraform Validate
        id: validate
        run: terraform validate -no-color

      - name: Terraform Plan
        id: plan
        if: github.event_name == 'pull_request'
        run: terraform plan -no-color -input=false
        continue-on-error: true

      - uses: actions/github-script@v6
        if: github.event_name == 'pull_request'
        env:
          PLAN: "terraform\n${{ steps.plan.outputs.stdout }}"
        with:
          github-token: ${{ secrets.GH_TOKEN }}
          script: |
            const output = `#### Terraform Format and Style üñå\`${{ steps.fmt.outcome }}\`
            #### Terraform Initialization ‚öôÔ∏è\`${{ steps.init.outcome }}\`
            #### Terraform Validation ü§ñ\`${{ steps.validate.outcome }}\`
            #### Terraform Plan üìñ\`${{ steps.plan.outcome }}\`

            <details><summary>Show Plan</summary>

            \`\`\`\n
            ${process.env.PLAN}
            \`\`\`

            </details>

            *Pushed by: @${{ github.actor }}, Action: \`${{ github.event_name }}\`*`;

            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: output
            })

      - name: Terraform Plan Status
        if: steps.plan.outcome == 'failure'
        run: exit 1

  Development:
    name: Terraform Apply (Main)
    needs: [Build]
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'
    environment:
      name: Development
      url: "http://dev.demoApp.com"
    steps:
      - name: Set up Cloud SDK
        uses: google-github-actions/setup-gcloud@v1

      - name: Checkout
        uses: actions/checkout@v3

      - uses: google-github-actions/auth@v1
        id: auth
        with:
          credentials_json: ${{ secrets.GCP_SA }}

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2

      - name: Initialize Terraform
        run: terraform init

      - name: Deploy
        run: terraform apply -auto-approve -input=false

  Staging:
    name: Deploy to Staging
    needs: [Build]
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'
    environment:
      name: Staging
      url: "http://dev.test_demoApp.com"
    steps:
      - name: Set up Cloud SDK
        uses: google-github-actions/setup-gcloud@v1

      - name: Checkout
        uses: actions/checkout@v3

      - uses: google-github-actions/auth@v1
        id: auth
        with:
          credentials_json: ${{ secrets.GCP_SA }}

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2

      - name: Initialize Terraform
        run: terraform init

      - name: Initialize Terraform
        run: terraform plan

      - name: Set up JDK 17 for main branch
        uses: actions/setup-java@v3
        with:
          distribution: "temurin"
          java-version: "17"

      - name: Build JAR
        run: mvn clean package -DskipTests
        working-directory: ./

      - name: Build & Push Docker Image (Only for Main Branch)
        run: |
          gcloud auth configure-docker northamerica-northeast1-docker.pkg.dev
          docker build -t northamerica-northeast1-docker.pkg.dev/off-net-dev/lendly-demo/spring-boot-rest-app:latest .
          docker push northamerica-northeast1-docker.pkg.dev/off-net-dev/lendly-demo/spring-boot-rest-app:latest
        working-directory: ./

      - name: Terraform Apply (Staging)
        run: terraform apply -auto-approve -input=false
